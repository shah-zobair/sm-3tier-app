apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-postgres
spec:
  selector:
    matchLabels:
      app: backend-postgres
      version: v1
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: backend-postgres
        version: v1
    spec:
      containers:
      - name: backend-postgres
        image: registry.redhat.io/rhel8/postgresql-12
        #image: image-registry.openshift-image-registry.svc:5000/openshift/backend-postgres
        imagePullPolicy: IfNotPresent
        env:
        - name: SERVICE_NAME
          value: backend-postgres
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: postgresql
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: postgresql
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: postgresql
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        ports:
        - containerPort: 5432
          protocol: TCP
          name: db
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
            cpu: 500m
          request:
            memory: 100Mi
            cpu: 100m
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgresql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: postgresql-data
---
apiVersion: v1
kind: Service
metadata:
  name: backend-postgres
  labels:
    app: backend-postgres
    service: backend-postgres
    version: v1
spec:
  ports:
  - port: 5432
    protocol: TCP
    name: tcp-db
    targetPort: 5432
  selector:
    app: backend-postgres
    version: v1
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    template.openshift.io/expose-password: '{.data[''database-password'']}'
    template.openshift.io/expose-username: '{.data[''database-user'']}'
  labels:
  name: postgresql
data:
  database-name: ZGI=
  database-password: cGFzcw==
  database-user: dXNlcg==
type: Opaque
